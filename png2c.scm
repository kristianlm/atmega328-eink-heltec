;; Convert the png file into a c file for avr-gcc. I'm not proud of
;; this, it is a total mess.
;; 
;; you'll need Chicken 5 (call-cc.org) to run csi try pacman -S
;; chicken # or apt install chicken-bin
(import stb-image
        chicken.port
        chicken.format
        chicken.bitwise
        chicken.process
        srfi-4)

(with-output-to-file "hello.c"
  (lambda ()
    (print "// generated by png2c.scm. sorry about the mess.")
    (print "#include <stdint.h>")
    (print "#include <avr/pgmspace.h>")
    (receive (p w h c) (with-input-from-file "hello.png" read-image)

      (define (blackpixel? x y)
        (let ((offset (+ x (* w y))))
          (< 128 (u8vector-ref p (* offset c)))))

      (define (redpixel? x y)
        (let ((offset (+ x (* w y))))
          (not
           (or (> 128 (u8vector-ref p (* offset c)))
               (< 128 (u8vector-ref p (+ 1 (* offset c))))))))
      
      (print "const uint8_t black[] PROGMEM = {")
      (do ((y 0 (+ y 1)))
          ((>= y h))
        (do ((x 0 (+ x 8)))
            ((>= x w))
          (print* " ")
          ;;(print "doing (getpixel x (+ yy y)) =" x  " " y " "(getpixel x (+ 0 y)))
          (do ((yy 0 (+ yy 1))
               (b 0
                  (bitwise-ior (arithmetic-shift b 1)
                               (if (blackpixel? (+ x yy) (+ y)) 1 0))))
              ((>= yy 8) (printf " 0x~a~x," (if (<= b 15) "0" "") b))))
        (print " // " y ))
      (print "};")      

      (print "const uint8_t red[] PROGMEM = {")
      (do ((y 0 (+ y 1)))
          ((>= y h))
        (do ((x 0 (+ x 8)))
            ((>= x w))
          (print* " ")
          ;;(print "doing (getpixel x (+ yy y)) =" x  " " y " "(getpixel x (+ 0 y)))
          (do ((yy 0 (+ yy 1))
               (b 0
                  (bitwise-ior (arithmetic-shift b 1)
                               (if (redpixel? (+ x yy) (+ y)) 0 1))))
              ((>= yy 8) (printf " 0x~a~x," (if (<= b 15) "0" "") b))))
        (print " // " y ))


      (print "};"))))
